plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // kotlin apt插件，如果不引入，apt无法对kotlin代码生效
    id 'kotlin-kapt'
}
android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'
    defaultConfig {
        applicationId "com.xiaobing.improvedemo"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // 在gradle文件中配置选项参数值（用于APT传参接收）
        // 切记：必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [content : 'hello apt']
            }
        }
        // kotlin 向 apt传参，作用和上面的一样
        kapt {
            arguments {
                arg("kotlinContent", "hello kapt")
            }
        }
    }
    signingConfigs {
        sign {
            keyAlias 'improve'
            keyPassword 'huangshangjiadao'
            storeFile file('src/main/main.jks')
            storePassword 'huangshangjiadao'
        }
    }
    buildTypes {
        release {
            def enabled = true
            minifyEnabled enabled
            zipAlignEnabled enabled
            shrinkResources enabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HOST", RELEASE_BASE_URL
            buildConfigField "String", "DOUBAN_HOST", DOUBAN_HOST
            signingConfig signingConfigs.sign
        }
        debug {
            def enabled = false
            debuggable !enabled
            minifyEnabled enabled
            zipAlignEnabled enabled
            shrinkResources enabled
            buildConfigField "String", "HOST", DEBUG_BASE_URL
            buildConfigField "String", "DOUBAN_HOST", DOUBAN_HOST
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }
    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/'] } }
    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }

    // viewBinding
    buildFeatures{
        viewBinding = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    // androidx 约束布局
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // dex分包
    implementation 'androidx.multidex:multidex:2.0.1'

    // androidx 注解
    implementation 'androidx.annotation:annotation:1.5.0'

    implementation 'androidx.legacy:legacy-support-v13:1.0.0'

    implementation 'com.google.android.material:material:1.7.0'
    implementation(retrofit) {
        exclude module: 'okhttp'
    }
    implementation(retrofit_converter_gson) {
//        exclude module: 'gson'
    }
    // retrofit 排除 rxjava
    implementation(retrofit_adapter_rxjava) {
        exclude module: 'rxjava'
    }
    implementation rxandroid
    implementation rxjava
    implementation rxandroid2
    implementation rxjava2
    implementation rxlifecycle
    implementation rxlifecycle_components
    implementation retrofit_converter_gson
    implementation retrofit_adapter_rxjava
    implementation retrofit_adapter_rxjava2
    // butter_knife 和 butter_knife的 注解处理器
//    implementation butter_knife
//    annotationProcessor butter_knife_compiler

    // glide 和 glide 注解处理器
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // kotlin
    implementation "androidx.core:core-ktx:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


    // 测试库
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'



    // 自定义注解和自定义注解处理器
    implementation project(":annotation")
    annotationProcessor project(":compiler")


    kapt project(path: ':annotation')
    implementation project(path: ':annotation')

    //注意 一定要kapt
    kapt project(path: ':compiler')
}
repositories {
    mavenCentral()
}
